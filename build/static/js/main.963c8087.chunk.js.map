{"version":3,"sources":["Components/MainMenu/MainMenu.module.css","Components/HowToPlay/HowToPlay.module.css","Components/Footer/Footer.module.css","Components/Cell/Cell.module.css","Components/Settings/Settings.module.css","Components/Header/Header.module.css","Components/GameOver/GameOver.module.css","Components/Music/Music.module.css","Components/Footer/rs_school_js.svg","Components/Footer/github.svg","Components/Footer/Footer.jsx","Components/MainMenu/MainMenu.jsx","useInterval.js","Components/Header/Header.jsx","Components/GameOver/GameOver.jsx","Components/Cell/Cell.jsx","Components/Statistics/Statistics.jsx","Components/Music/Music.jsx","bite_sound.mp3","Components/Play/Play.jsx","Components/Settings/Settings.jsx","Components/Scoreboard/Scoreboard.jsx","Components/HowToPlay/HowToPlay.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Footer","className","styles","footer","href","src","image","alt","linksize","image1","MainMenu","localStorage","getItem","setItem","wrapper","header","menuButtons","navlik","to","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Header","GameOver","props","scoreArray","JSON","parse","push","count","sort","a","b","reverse","splice","stringify","style","x","y","snakeSegments","foodItem","food","segment","snakeBody","Cell","main","segments","Statistics","Music","useState","Audio","audio","playing","setPlaying","volume","play","pause","addEventListener","removeEventListener","useAudio","toggle","playMuteButton","onClick","SoundOutlined","SoundFilled","FieldSize","FieldRow","Array","keys","AudioFood","sound","intersectsWithWall","DIRECTION","limitByField","Math","floor","random","k","newSnakePosition","direction","head","newHead","collidesWithFood","num","unshift","slice","Play","setDirection","setSnakeSegments","onKeypress","e","key","toLowerCase","document","intersectsWithSomething","intersectsWithItself","some","Number","map","window","history","back","Settings","settingsWrapper","buttonsBlock","defaultValue","onChange","value","Scoreboard","index","HowToPlay","buttonsContainer","button","App","title","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.963c8087.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MainMenu_wrapper__2l7Gq\",\"header\":\"MainMenu_header__PAvX1\",\"menuButtons\":\"MainMenu_menuButtons__155Fe\",\"navlik\":\"MainMenu_navlik__28V-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HowToPlay_wrapper__3La1D\",\"header\":\"HowToPlay_header__eHCvR\",\"buttonsContainer\":\"HowToPlay_buttonsContainer__2H7kk\",\"button\":\"HowToPlay_button__3qe1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2BtLZ\",\"linksize\":\"Footer_linksize__2nX5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Cell_main__3BTCv\",\"food\":\"Cell_food__ZTKBW\",\"snakeBody\":\"Cell_snakeBody__B3ijd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsWrapper\":\"Settings_settingsWrapper__3wFGU\",\"buttonsBlock\":\"Settings_buttonsBlock__2vr_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2038S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":\"GameOver_style__HxdD8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playMuteButton\":\"Music_playMuteButton__3wj84\"};","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","export default __webpack_public_path__ + \"static/media/github.63e66eae.svg\";","import React from 'react';\r\nimport styles from './Footer.module.css';\r\nimport image from './rs_school_js.svg';\r\nimport image1 from './github.svg';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={styles.footer}>\r\n           <div>\r\n            <a href = \"https://rs.school/js/\" ><img src={image} alt=\"RSSLogo\" className={styles.linksize}/></a>\r\n            <a href = \"https://github.com/Gurnick013\" ><img src={image1} alt=\"GIT\" className={styles.linksize}/></a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Button} from 'antd';\r\nimport styles from './MainMenu.module.css'\r\nimport Footer from \"../Footer/Footer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst MainMenu = () => {\r\n    if (!localStorage.getItem('volume')) localStorage.setItem('volume', '0.5');\r\n    return (\r\n\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.header}>\r\n                SNAKE GAME\r\n            </div>\r\n            <div className={styles.menuButtons}>\r\n                <NavLink className = {styles.navlik}  to='/play'>New Game</NavLink>\r\n                <NavLink className = {styles.navlik} to='/scoreboard'>\r\n                    Scoreboard\r\n                </NavLink>\r\n                <NavLink className = {styles.navlik} to='/settings'>\r\n                    Settings\r\n                </NavLink>\r\n                <NavLink className = {styles.navlik} to='/how_to_play'>\r\n                    How to play\r\n                </NavLink>\r\n                <NavLink className = {styles.navlik} to='/about'>\r\n                    About\r\n                </NavLink>\r\n                <Footer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MainMenu;","import {useEffect, useRef} from 'react';\r\n\r\nconst useInterval = (callback, delay) => {\r\n\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n        const tick = () => {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n\r\nexport default useInterval;","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={styles.header}>\r\n            Snake Game\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './GameOver.module.css';\r\n\r\nconst GameOver = (props) => {\r\n    if (!localStorage.getItem('score')) localStorage.setItem('score', '[0,0,0,0,0,0,0,0,0,0]');\r\n\r\n    const scoreArray = JSON.parse(localStorage.getItem('score'));\r\n    scoreArray.push(props.count);\r\n    scoreArray.sort((a, b) => {\r\n        return a - b\r\n    }).reverse().splice(10);\r\n    localStorage.setItem('score', JSON.stringify(scoreArray));\r\n\r\n    return (\r\n        <div className={styles.style}>\r\n            <div>\r\n                Game Over\r\n            </div>\r\n            <div>\r\n                Your Score is {props.count}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default GameOver;","import React from 'react';\r\nimport styles from './Cell.module.css';\r\n\r\nconst getItem = (x, y, snakeSegments, foodItem) => {\r\n    if (foodItem.x === x && foodItem.y === y) {\r\n        return <span className={styles.food}>f</span>\r\n    }\r\n\r\n    for (const segment of snakeSegments) {\r\n        if (segment.x === x && segment.y === y) {\r\n            return <span className={styles.snakeBody}>s</span>\r\n        }\r\n    }\r\n};\r\n\r\nconst Cell = (props) => {\r\n    return (\r\n        <div className={styles.main}>\r\n            {getItem(props.x, props.y, props.segments, props.foodItem) || ``}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cell;","import React from 'react';\r\n\r\nconst Statistics = (props) => {\r\n    return (\r\n        <div>\r\n           Your score is {props.count}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Statistics;","import React, { useState, useEffect } from \"react\";\r\nimport {SoundOutlined, SoundFilled} from '@ant-design/icons';\r\nimport styles from './Music.module.css';\r\n\r\nconst useAudio = () => {\r\n    const [audio] = useState(new Audio('https://mp3hap.net/uploads/files/2020-10/1603377900_elena_zheludok_-_shchuchynshchyna_456485968474499226.mp3'));\r\n    const [playing, setPlaying] = useState(false);\r\n    const toggle = () => setPlaying(!playing);\r\n    audio.volume = +localStorage.getItem('volume');\r\n\r\n    useEffect(() => {\r\n            playing ? audio.play() : audio.pause();\r\n        },\r\n        [playing]\r\n    );\r\n\r\n    useEffect(() => {\r\n        audio.addEventListener('ended', () => setPlaying(false));\r\n        return () => {\r\n            audio.removeEventListener('ended', () => setPlaying(false));\r\n        };\r\n    }, []);\r\n\r\n    return [playing, toggle];\r\n};\r\n\r\nconst Music = () => {\r\n\r\n    const [playing, toggle] = useAudio();\r\n    return (\r\n        <div>\r\n            <span className={styles.playMuteButton}  onClick={toggle}>{playing ? <SoundOutlined /> : <SoundFilled />}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","export default __webpack_public_path__ + \"static/media/bite_sound.904dad75.mp3\";","import React, {useEffect, useState} from \"react\";\r\nimport useInterval from \"../../useInterval\";\r\nimport Header from \"../Header/Header\";\r\nimport GameOver from \"../GameOver/GameOver\";\r\nimport Cell from \"../Cell/Cell\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\n\r\nimport Music from \"../Music/Music\";\r\n\r\nimport sound from '../../bite_sound.mp3'\r\nimport {Button} from \"antd\";\r\n\r\nconst FieldSize = 16;\r\nconst FieldRow = [...new Array(FieldSize).keys()];\r\n\r\nconst AudioFood = new Audio(sound);\r\nlet intersectsWithWall = false;\r\n\r\nconst DIRECTION = {\r\n    right: {x: 1, y: 0},\r\n    left: {x: -1, y: 0},\r\n    top: {x: 0, y: -1},\r\n    bottom: {x: 0, y: 1},\r\n};\r\n\r\nconst limitByField = (x) => {\r\n    if ((x >= FieldSize) && (localStorage.getItem('gameMode') === 'hard')) {\r\n        intersectsWithWall = true;\r\n        return;\r\n    }\r\n\r\n    if ((x < 0) && (localStorage.getItem('gameMode') === 'hard')) {\r\n        intersectsWithWall = true;\r\n        return;\r\n    }\r\n\r\n    if (x >= FieldSize) {\r\n        return 0;\r\n    }\r\n    if (x < 0) {\r\n        return FieldSize - 1;\r\n    }\r\n    return x;\r\n}\r\n\r\nlet foodItem = {\r\n    x: Math.floor(Math.random() * FieldSize),\r\n    y: Math.floor(Math.random() * FieldSize)\r\n};\r\n\r\nconst collidesWithFood = (head, foodItem) => {\r\n    return foodItem.x === head.x && foodItem.y === head.y;\r\n};\r\nlet k = 0;\r\nconst countIncreaser = () => {\r\n    k++;\r\n    return k;\r\n}\r\n\r\nconst newSnakePosition = (segments, direction) => {\r\n    const [head] = segments;\r\n    const newHead = {\r\n        x: limitByField(head.x + direction.x),\r\n        y: limitByField(head.y + direction.y)\r\n    };\r\n    if (collidesWithFood(newHead, foodItem)) {\r\n        countIncreaser();\r\n        AudioFood.volume = +localStorage.getItem('volume');\r\n        AudioFood.play();\r\n        if ((localStorage.getItem('gameMode') !== 'easy')) {\r\n            let num = localStorage.getItem('speed');\r\n            num = +num - 2;\r\n            localStorage.setItem('speed', num);\r\n        }\r\n        foodItem = {\r\n            x: Math.floor(Math.random() * FieldSize),\r\n            y: Math.floor(Math.random() * FieldSize)\r\n        };\r\n        segments.unshift(head);\r\n        return [newHead, ...segments];\r\n    } else {\r\n        return [newHead, ...segments.slice(0, -1)];\r\n    }\r\n}\r\n\r\n\r\nconst Play = () => {\r\n\r\n    if (k === 0) localStorage.setItem('speed', '150');\r\n\r\n    const [direction, setDirection] = useState(DIRECTION.bottom);\r\n\r\n    const [snakeSegments, setSnakeSegments] = useState([\r\n        {x: 8, y: 8},\r\n        {x: 8, y: 7},\r\n        {x: 8, y: 6},\r\n    ]);\r\n\r\n // let move;\r\n    useEffect(() => {\r\n        const onKeypress = e => {\r\n            if (e.key.toLowerCase() === 'w' ||\r\n                e.key.toLowerCase() === 'ц' ||\r\n                e.key === 'ArrowUp' && e.key !== 'ArrowDown') {\r\n\r\n                setDirection(DIRECTION.top);\r\n            }\r\n            if (e.key.toLowerCase() === 's' ||\r\n                e.key.toLowerCase() === 'ы' ||\r\n                e.key === 'ArrowDown') {\r\n                setDirection(DIRECTION.bottom);\r\n            }\r\n            if (e.key.toLowerCase() === 'a' ||\r\n                e.key.toLowerCase() === 'ф' ||\r\n                e.key === 'ArrowLeft') {\r\n                setDirection(DIRECTION.left);\r\n            }\r\n            if (e.key.toLowerCase() === 'd' ||\r\n                e.key.toLowerCase() === 'в' ||\r\n                e.key === 'ArrowRight') {\r\n                setDirection(DIRECTION.right);\r\n            }\r\n        }\r\n        document.addEventListener('keydown', onKeypress);\r\n        return () => {\r\n            document.removeEventListener('keydown', onKeypress);\r\n        };\r\n    }, []);\r\n\r\n    const [head, ...tail] = snakeSegments;\r\n    const intersectsWithItself = tail.some(segment => segment.x === head.x && segment.y === head.y);\r\n\r\n    useInterval(() => {\r\n        setSnakeSegments(segments => newSnakePosition(segments, direction));\r\n    }, intersectsWithItself ? null : Number(localStorage.getItem('speed')));\r\n\r\n    let intersectsWithSomething;\r\n\r\n    if (intersectsWithItself || intersectsWithWall) {\r\n        intersectsWithSomething = true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Header/>\r\n            <Music/>\r\n            {intersectsWithSomething ? <GameOver count={k}/> : (\r\n                <div className='miniField'>\r\n                    {FieldRow.map(y => (\r\n                        <div className='horizontal'>\r\n                            {FieldRow.map(x => (\r\n                                <Cell x={x} y={y} segments={snakeSegments} foodItem={foodItem}/>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <Statistics count={k}/>\r\n            <Button onClick={() => window.history.back()}>Back</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Play;","import React from \"react\";\r\nimport {Button, Slider} from \"antd\";\r\nimport styles from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    let volume = +localStorage.getItem('volume');\r\n    return (\r\n        <div className={styles.settingsWrapper}>\r\n            <div className={styles.buttonsBlock}>\r\n                <div>\r\n                    Music Volume\r\n                    <Slider defaultValue={volume * 100} onChange={(value) => {localStorage.setItem('volume', value / 100)}}/>\r\n                </div>\r\n                <Button onClick={ () => {\r\n                        localStorage.setItem('gameMode', 'easy');\r\n                        localStorage.setItem('speed', '150');\r\n                    }\r\n                }>Easy</Button>\r\n                <Button onClick={ () => {\r\n                    localStorage.setItem('gameMode', 'medium');\r\n                    localStorage.setItem('speed', '150');\r\n                }\r\n                }>Medium</Button>\r\n                <Button onClick={ () => {\r\n                    localStorage.setItem('gameMode', 'hard');\r\n                    localStorage.setItem('speed', '150');\r\n                }\r\n                }>Hard</Button>\r\n                <Button onClick={() => window.history.back()}>Back</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport {Button} from \"antd\";\r\n\r\nconst scoreArray = JSON.parse(localStorage.getItem('score'));\r\n\r\n\r\nconst Scoreboard = () => {\r\n    return (\r\n        <div>\r\n            {scoreArray.map((e, index) => {\r\n                return <div>{index + 1} {e}</div>\r\n            })}\r\n            <Button onClick={() => window.history.back()}>Back</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scoreboard;","import React from 'react';\r\nimport styles from './HowToPlay.module.css';\r\nimport {Button} from \"antd\";\r\n\r\nconst HowToPlay = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.header}>\r\n                How to play\r\n            </div>\r\n            <div className={styles.buttonsContainer}>\r\n                <div>\r\n                    <div>Up</div>\r\n                    <div>Down</div>\r\n                    <div>Left</div>\r\n                    <div>Right</div>\r\n                </div>\r\n                <div>\r\n                    <div>W / ArrowUp</div>\r\n                    <div>S / ArrowDown</div>\r\n                    <div>A / ArrowLeft</div>\r\n                    <div>D / ArrowRight</div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.button}>\r\n                <Button onClick={() => window.history.back()}>Back</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowToPlay;","import React from 'react';\r\nimport './App.css';\r\nimport MainMenu from \"./Components/MainMenu/MainMenu\";\r\nimport Play from \"./Components/Play/Play\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport Scoreboard from \"./Components/Scoreboard/Scoreboard\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport HowToPlay from \"./Components/HowToPlay/HowToPlay\";\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        document.title = \"Snake Game\"\r\n    }, []);\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"wrapper\">\r\n                <Route exact path='/' component={MainMenu}/>\r\n                <Route path='/play' component={Play}/>\r\n                <Route path='/settings' component={Settings}/>\r\n                <Route path='/scoreboard' component={Scoreboard}/>\r\n                <Route path='/how_to_play' component={HowToPlay}/>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}